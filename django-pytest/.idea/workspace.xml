<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f7e119bc-a451-4ecb-926b-dafaacbc67ba" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/django-pytest.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/django-pytest.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/coronavstech/companies/serializers.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/admin.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/apps.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/migrations/0001_initial.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/migrations/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/api/coronavstech/companies/urls.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/models.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/serializers.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/tests.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/urls.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/companies/views.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/coronavstech/__init__.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/coronavstech/asgi.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/coronavstech/settings.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/coronavstech/urls.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/coronavstech/wsgi.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/manage.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../poetry.lock" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../pyproject.toml" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2KNd8of7PMyO3jVrfPZTHajV5QR" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/ragnar.olafsson/dev/github/django-sandbox/django-pytest",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
  }
}]]></component>
  <component name="RunManager" selected="Django tests.Django Tests">
    <configuration name="Django Tests" type="DjangoTestsConfigurationType">
      <module name="django-pytest" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="$USER_HOME$/Library/Caches/pypoetry/virtualenvs/django-sandbox-A8Hv3dIl-py3.10/bin/python" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/api" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
        </ENTRIES>
      </EXTENSION>
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="$PROJECT_DIR$/api/coronavstech/settings.py" />
      <option name="CUSTOM_SETTINGS" value="true" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for coronavstech.companies.tests.test_api.TestGetCompanies" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="django-pytest" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/coronavstech/companies/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;coronavstech.companies.tests.test_api.TestGetCompanies&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for coronavstech.companies.tests.test_api.TestGetCompanies.test_zero_companies_should_return_empty_list" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="django-pytest" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/coronavstech/companies/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
        </ENTRIES>
      </EXTENSION>
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;coronavstech.companies.tests.test_api.TestGetCompanies.test_zero_companies_should_return_empty_list&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Django tests.Django Tests" />
      <item itemvalue="Python tests.Python tests for coronavstech.companies.tests.test_api.TestGetCompanies" />
      <item itemvalue="Python tests.Python tests for coronavstech.companies.tests.test_api.TestGetCompanies.test_zero_companies_should_return_empty_list" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for coronavstech.companies.tests.test_api.TestGetCompanies" />
        <item itemvalue="Python tests.Python tests for coronavstech.companies.tests.test_api.TestGetCompanies.test_zero_companies_should_return_empty_list" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f7e119bc-a451-4ecb-926b-dafaacbc67ba" name="Changes" comment="" />
      <created>1673818819341</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1673818819341</updated>
      <workItem from="1673818822420" duration="183000" />
      <workItem from="1673819016066" duration="178000" />
      <workItem from="1673819211836" duration="2197000" />
      <workItem from="1673955015738" duration="8054000" />
      <workItem from="1674065391128" duration="1432000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/django_pytest$.coverage" NAME=" Coverage Results" MODIFIED="1673988837787" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/api/companies/tests" />
    <SUITE FILE_PATH="coverage/django_pytest$Django_Tests.coverage" NAME="Django Tests Coverage Results" MODIFIED="1673988846616" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/api" />
  </component>
</project>